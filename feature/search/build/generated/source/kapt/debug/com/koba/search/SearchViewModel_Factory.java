// Generated by Dagger (https://dagger.dev).
package com.koba.search;

import com.koba.domain.usecase.GetImageSearchResultListUseCase;
import com.koba.domain.usecase.GetVideoSearchResultListUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchViewModel_Factory implements Factory<SearchViewModel> {
  private final Provider<GetImageSearchResultListUseCase> getImageSearchResultListUseCaseProvider;

  private final Provider<GetVideoSearchResultListUseCase> getVideoSearchResultListUseCaseProvider;

  public SearchViewModel_Factory(
      Provider<GetImageSearchResultListUseCase> getImageSearchResultListUseCaseProvider,
      Provider<GetVideoSearchResultListUseCase> getVideoSearchResultListUseCaseProvider) {
    this.getImageSearchResultListUseCaseProvider = getImageSearchResultListUseCaseProvider;
    this.getVideoSearchResultListUseCaseProvider = getVideoSearchResultListUseCaseProvider;
  }

  @Override
  public SearchViewModel get() {
    return newInstance(getImageSearchResultListUseCaseProvider.get(), getVideoSearchResultListUseCaseProvider.get());
  }

  public static SearchViewModel_Factory create(
      Provider<GetImageSearchResultListUseCase> getImageSearchResultListUseCaseProvider,
      Provider<GetVideoSearchResultListUseCase> getVideoSearchResultListUseCaseProvider) {
    return new SearchViewModel_Factory(getImageSearchResultListUseCaseProvider, getVideoSearchResultListUseCaseProvider);
  }

  public static SearchViewModel newInstance(
      GetImageSearchResultListUseCase getImageSearchResultListUseCase,
      GetVideoSearchResultListUseCase getVideoSearchResultListUseCase) {
    return new SearchViewModel(getImageSearchResultListUseCase, getVideoSearchResultListUseCase);
  }
}
