// Generated by Dagger (https://dagger.dev).
package com.koba.domain.usecase;

import com.koba.data.repository.StorageRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SaveImageUrlUseCase_Factory implements Factory<SaveImageUrlUseCase> {
  private final Provider<StorageRepository> storageRepositoryProvider;

  public SaveImageUrlUseCase_Factory(Provider<StorageRepository> storageRepositoryProvider) {
    this.storageRepositoryProvider = storageRepositoryProvider;
  }

  @Override
  public SaveImageUrlUseCase get() {
    return newInstance(storageRepositoryProvider.get());
  }

  public static SaveImageUrlUseCase_Factory create(
      Provider<StorageRepository> storageRepositoryProvider) {
    return new SaveImageUrlUseCase_Factory(storageRepositoryProvider);
  }

  public static SaveImageUrlUseCase newInstance(StorageRepository storageRepository) {
    return new SaveImageUrlUseCase(storageRepository);
  }
}
