// Generated by Dagger (https://dagger.dev).
package com.koba.domain.usecase;

import com.koba.data.repository.StorageRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DeleteImageUrlUseCase_Factory implements Factory<DeleteImageUrlUseCase> {
  private final Provider<StorageRepository> savedRepositoryProvider;

  public DeleteImageUrlUseCase_Factory(Provider<StorageRepository> savedRepositoryProvider) {
    this.savedRepositoryProvider = savedRepositoryProvider;
  }

  @Override
  public DeleteImageUrlUseCase get() {
    return newInstance(savedRepositoryProvider.get());
  }

  public static DeleteImageUrlUseCase_Factory create(
      Provider<StorageRepository> savedRepositoryProvider) {
    return new DeleteImageUrlUseCase_Factory(savedRepositoryProvider);
  }

  public static DeleteImageUrlUseCase newInstance(StorageRepository savedRepository) {
    return new DeleteImageUrlUseCase(savedRepository);
  }
}
